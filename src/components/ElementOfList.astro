---
import { PATH_TO_IMAGES } from "@/const/global"
import type { ItemOfList } from "@/types/Global"
import Button from "./Button.astro"
import Typography from "./Typography.astro"

interface Props {
	item: ItemOfList
	order: number
}

const { item, order } = Astro.props
if (item === undefined) throw new Error("Item is required")

const { id, title, description, image, callToAction } = item
---

<li data-benefit={`${id}`}>
	<article
		class:list={[
			"flex items-center justify-between",
			order % 2 === 0 ? "flex-row" : "flex-row-reverse",
		]}
	>
		<header class="max-w-[445px]">
			<Typography as="h2" variant="h2" color="dark100" class="mb-6">
				{title}
			</Typography>

			<div>
				<Typography as="p" variant="body" color="dark200">
					{description}
				</Typography>
			</div>

			{
				callToAction?.link && (
					<div class="mt-10 flex items-center justify-start">
						<Button href={callToAction?.link}>{callToAction?.label}</Button>
					</div>
				)
			}
		</header>

		<picture class="relative aspect-square w-full max-w-[445px]">
			<div class="overflow-hidden rounded-full">
				{
					/* {
		image.webp && (
			<source srcset={image.webp} type="image/webp" />
		)
	} */
				}
				<img
					class="w-full object-cover"
					data-img={image?.jpg}
					src={`${PATH_TO_IMAGES}${image.webp || image.jpg}`}
					alt=""
				/>
			</div>

			<div
				class:list={[
					"absolute bottom-0 top-0 aspect-square w-full overflow-hidden rounded-full bg-light-100",
					order % 2 === 0 ? "left-full lg:ml-12 xl:ml-16" : "right-full lg:mr-12 xl:mr-16",
				]}
			>
			</div>
		</picture>
	</article>
</li>
