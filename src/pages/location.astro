---
import Hero from "@/components/Hero.astro"
import HeroOvals from "@/components/HeroOvals.astro"
import HeroPicture from "@/components/HeroPicture.astro"
import Link from "@/components/Link.astro"
import Typography from "@/components/Typography.astro"
import Layout from "@/layouts/Layout.astro"
import BaseContainer from "@/sections/BaseContainer.astro"
---

<Layout title="Location">
	<!-- Hero -->
	<BaseContainer sectionClass="lg:mb-16">
		<Hero title="Locations" />

		<div slot="decotations">
			<HeroOvals size="small" position="hero" />
			<HeroPicture position="left" src="/assets/images/hero/careers-locations-hero-desktop.jpg" />
		</div>
	</BaseContainer>

	<!-- Word Map -->
	<BaseContainer sectionClass="pt-28 pb-20 lg:py-16">
		<article class="flex flex-col gap-y-16 max-lg:justify-start lg:gap-y-28">
			<div class="w-full lg:h-[590px]">
				<img
					id="world-map"
					src="/assets/images/world-map-desktop.png"
					alt="The Scream"
					class="invisible hidden h-0 w-0"
				/>
				<canvas
					class="mx-auto h-auto max-h-[590px] w-full object-contain"
					width="1110"
					height="590"
					data-canvas="world-map"></canvas>
			</div>

			<footer
				class="flex flex-col items-center justify-center gap-y-10 max-lg:text-center lg:flex-row lg:gap-x-8"
			>
				<div class="max-w-[350px] flex-1">
					<Typography as="h2" variant="h2" color="dark100"> Your City Not Listed? </Typography>
				</div>

				<div class="w-full max-w-xl flex-1 lg:max-w-[490px]">
					<Typography as="p" variant="p" color="dark200">
						If youâ€™d like to see Scoot in your hometown, be sure to let us know. We track requests
						and plan launches based on demand. Feel free to message us by clicking the link or
						messaging us on social.
					</Typography>
				</div>

				<div class="mx-auto lg:ml-auto">
					<Link> Message Us </Link>
				</div>
			</footer>
		</article>
	</BaseContainer>
</Layout>

<script>
	const canvas = document.querySelector('[data-canvas="world-map"]') as HTMLCanvasElement
	const ctx = canvas?.getContext("2d") as CanvasRenderingContext2D
	const image = document.getElementById("world-map") as HTMLImageElement

	const pathWidth = 189
	const pathHeight = 176 // 88

	const PATH_FLAG = new Path2D("M189 0H0V72H78L94 88L110 72H189V0Z")
	const LOCATIONS_FLAGS = [
		{
			name: "New York",
			x: 241,
			y: 166,
		},
		{
			name: "London",
			x: 489,
			y: 106,
		},
		{
			name: "Yokohama",
			x: 950,
			y: 164,
		},
		{
			name: "Jakarta",
			x: 878,
			y: 338,
		},
	]

	function drawImage() {
		ctx?.drawImage(image, 0, 0, canvas.width, canvas.height)

		drawFlags()
	}

	function drawFlags() {
		LOCATIONS_FLAGS.forEach(({ x, y, name }) => drawFlag({ x, y, name }))
	}

	function drawFlag({ x, y, name }: { x: number; y: number; name: string }) {
		ctx.save()
		// PATH
		ctx.beginPath()
		ctx.translate(x - pathWidth / 2, y - pathHeight / 2)
		ctx.fillStyle = "#fcb72b"
		ctx.fill(PATH_FLAG)

		// TEXT
		ctx.fillStyle = "#495567"
		ctx.font = "bold 24px 'Space Mono'"
		ctx.textAlign = "center"
		ctx.textBaseline = "middle"
		ctx.fillText(name, pathWidth / 2, pathHeight / 4.5)

		ctx.closePath()

		ctx.restore()
	}

	// canvas.addEventListener("click", (event) => {
	// 	const rect = canvas.getBoundingClientRect()
	// 	const x = event.clientX - rect.left
	// 	const y = event.clientY - rect.top
	// 	console.log("Coordenadas del clic:", x, y)
	// })

	drawImage()
</script>
